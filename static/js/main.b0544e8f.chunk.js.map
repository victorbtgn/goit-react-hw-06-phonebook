{"version":3,"sources":["redux/phonebook-action.js","redux/phonebook-reducer.js","redux/store.js","Common/Container.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/Contacts/ContactItem.js","Components/Contacts/ContactList.js","Common/Section.js","App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","Container","children","className","ContactForm","inputChange","currentTarget","value","setState","createContact","evt","preventDefault","props","find","item","toaster","notify","duration","length","onSubmit","reset","this","type","onChange","Component","connect","dispatch","contact","phonebookAction","contactsLength","e","target","ContactItem","onDelete","onClick","getVisibleContacts","allContacts","normalizeFilter","toLowerCase","includes","map","Section","title","defaultProps","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b0544e8f.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('phonebook/add', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('phonebook/delete');\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phonebook-action';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className=\"container\">\r\n    <div className=\"phonebook\">{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport toaster from 'toasted-notes';\nimport 'toasted-notes/src/styles.css';\nimport phonebookAction from '../../redux/phonebook-action';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  inputChange = ({ currentTarget: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  createContact = evt => {\n    evt.preventDefault();\n    const { name, number } = this.state;\n\n    const isExist = this.props.items.find(item => item.name === name);\n\n    if (isExist) {\n      toaster.notify(`${name} is already in contacts.`, {\n        duration: 5000,\n      });\n      return;\n    }\n\n    if (!name || !number) {\n      toaster.notify('Please fill the form', {\n        duration: 5000,\n      });\n      return;\n    }\n\n    if (number.length < 7 || number.length > 7) {\n      toaster.notify('Please fill the correct number: 12-34-567', {\n        duration: 5000,\n      });\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.createContact}>\n        <label>\n          Name *\n          <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className=\"input\"\n            onChange={this.inputChange}\n          />\n        </label>\n        <br />\n        <label>\n          Phone number *\n          <br />\n          <input\n            type=\"number\"\n            name=\"number\"\n            value={number}\n            className=\"input\"\n            onChange={this.inputChange}\n          />\n        </label>\n        <br />\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts }) => ({\n  items: contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact =>\n    dispatch(phonebookAction.addContact(contact.name, contact.number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport phonebookAction from '../../redux/phonebook-action';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filter, contactsLength, onChange }) => (\n  <>\n    {contactsLength > 1 && (\n      <label>\n        Find contacts by name\n        <br />\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          className=\"input\"\n          onChange={onChange}\n        />\n      </label>\n    )}\n  </>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  contactsLength: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  filter: contacts.filter,\n  contactsLength: contacts.items.length,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(phonebookAction.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, number, onDelete }) => (\n  <li className=\"list-item\">\n    <div className=\"list-item-data\">\n      <span>{name}:</span>\n      <span>\n        {number[0]}\n        {number[1]}-{number[2]}\n        {number[3]}-{number[4]}\n        {number[5]}\n        {number[6]}\n      </span>\n    </div>\n    <button className=\"btnContact\" type=\"button\" onClick={() => onDelete(id)}>\n      &#215;\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport ContactItem from './ContactItem';\nimport { connect } from 'react-redux';\nimport phonebookAction from '../../redux/phonebook-action';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul className=\"list\">\n    {contacts.map(({ id, name, number }) => (\n      <ContactItem\n        key={id}\n        id={id}\n        name={name}\n        number={number}\n        onDelete={() => onDelete(id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n  // const sortContactsByName = allContacts\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: getVisibleContacts(contacts.items, contacts.filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(phonebookAction.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    {title && <h2 className=\"feedback-title\">{title}</h2>}\r\n\r\n    <section className=\"section\">{children}</section>\r\n  </>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\nimport Container from './Common/Container';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/Contacts/ContactList';\nimport Section from './Common/Section';\nimport 'toasted-notes/src/styles.css';\nimport './App.css';\n\nconst App = () => (\n  <Container>\n    <Section title=\"Phonebook\">\n      <ContactForm />\n    </Section>\n\n    <Section title=\"Contacts\">\n      <Filter />\n\n      <ContactList />\n    </Section>\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}